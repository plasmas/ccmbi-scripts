#!/bin/bash

# This script is derived from WRF's JobStat script
# Adapted by WYQ
######################################

# Define text colors
NC='\033[0m'

Red='\033[0;31m'
Green='\033[0;32m'
Yellow='\033[1;33m'
Blue='\033[0;34m'
Purple='\033[0;35m'
LightBlue='\033[0;36m'

Blink='\033[5m'

######################################

usage()
{
    printf "${Yellow}\'Monitor\'${NC} is used to show SKL jobs.\n"
    printf "\t\t[-h] show this help.\n"
    printf "\t\t[-l] show jobs ${LightBlue}every${NC} ${Yellow}[n]${NC} ${LightBlue}seconds${NC}.\n"
    printf "\t\t[-a] show jobs of ${LightBlue}all users${NC}.\n"
    printf "\t\t[-u] show jobs of ${LightBlue}selected users${NC}.(Use ',' to separate users and only Number is needed.)\n"
    printf "\t\t[-s] show jobs of ${LightBlue}selected state${NC}.(Eg. R or Q for Running and Queue.)\n"
    printf "\t\t[-q] show jobs of ${LightBlue}selected state${NC}.(Eg. middle or m for middle.)\n"
}

LOOPFLAG=0
LOOPTIME=30
ALLFLAG=0
ADDFLAG=0 
STATEFLAG=0
QUEUEFLAG=0

while getopts ":l:au:s:q:h" opt; do
  case $opt in
    h | -Help )
      usage
      exit 0
      ;;
    l | -Loop )
      if [[ $(echo $OPTARG|egrep [a-z]+) = "" ]];then 
          LOOPTIME=$OPTARG
      elif [[ $(echo $OPTARG|grep "-") = "" ]];then
          OPTS=$(echo $@|sed 's/-al/-a/'|sed 's/-l/-/')
          Monitor $OPTS -l
          exit 0
      else
          OPTS=$(echo $@|sed 's/-al/-a/'|sed 's/-l//')
          Monitor $OPTS -l
          exit 0
      fi
      ;;
    a | -All_users)
      ALLFLAG=1
      ;;
    u | -Users_selected)
      ADDFLAG=1
      ADDLIST=$(echo $OPTARG|sed 's/,/\nylzh_/g')
      ;;
    s | -State_check)
      STATEFLAG=1
      STATE_CHECK=$OPTARG
      ;;
    q | -Queue_check)
      QUEUEFLAG=1
      QUEUE_CHECK=$OPTARG
      if [[ $QUEUE_CHECK = "l" ]]; then
          QUEUE_CHECK=low
      elif [[ $QUEUE_CHECK = "m" ]]; then
          QUEUE_CHECK=middle
      elif [[ $QUEUE_CHECK = "h" ]]; then
          QUEUE_CHECK=high
      fi
      ;;
    \?)
      usage
      exit 0
      ;;
  esac
done

if [[ $(echo $@) =~ "-l" ]] || [[ $(echo $@) =~ "-al" ]]; then
    LOOPFLAG=1
fi

# main function
PRINTOUT()
{
    for u in $@
    do
        user=$u
        number=$(qstat -f|grep -c "Job_Owner = $user")
        printf "\n${Red}üëçüëçüëç ${Yellow}%-9s${NC}    " $(echo $user | sed 's/\@//')
        if [[ $user = $(printf $(whoami);echo "@") ]]; then
            printf "${Red}${Blink}üëà You ${LightBlue}   ‚è∞ %s${NC}\n" $(date "+%H:%M:%S")
        else
            printf "\n"
        fi
        if [ $number = 0 ]; then                                               
            printf "No Job is Running\n\n"
            if [[ $user = $(whoami) ]] && [[ $ALLFLAG = 0 ]] && [[ $ADDFLAG = 0 ]]; then
                exit 0
            fi
        fi                                                                             
        for (( i=1;i<=$number;i=i+1))
        do
            Jobid=$(qstat -f|awk 'BEGIN {RS = "\n\n+";ORS = "\n\n"}'/$user/''|grep "Job Id"|awk -F "[:. ]" '{print $4}'|head -n $i|tail -n 1)
            Jobtitle=$(qstat -f|awk 'BEGIN {RS = "\n\n+";ORS = "\n\n"}'/$Jobid/''|grep "Job_Name"|awk '{print $3}')

            title_field=25
            id_field=6
            queue_field=7
            status_field=5
            run_time_field=4
            node_field=6

            QUEUE=$(qstat -f|awk 'BEGIN {RS = "\n\n+";ORS = "\n\n"}'/$Jobid/''|grep "queue"|awk '{print $3}')
            STATE=$(qstat -f|awk 'BEGIN {RS = "\n\n+";ORS = "\n\n"}'/$Jobid/''|grep "job_state"|awk '{print $3}')
            RUNNINGTIME=$(qstat -f|awk 'BEGIN {RS = "\n\n+";ORS = "\n\n"}'/$Jobid/''|grep "resources_used.cput"|awk '{print $3}'|awk 'BEGIN { FS = ":" } ; { print $1 }')
            if [[ $(echo $STATE_CHECK|grep -v "$STATE") != "" ]] && [[ $STATEFLAG = 1 ]]; then
                continue
            fi
            if [[ $(echo $QUEUE_CHECK|grep -v "$QUEUE") != "" ]] && [[ $QUEUEFLAG = 1 ]]; then
                continue
            fi
            
            if [ "${STATE}" = "R" ]; then
                STATE="üèÉ "
            fi
            if [ "${STATE}" = "Q" ]; then
                STATE="üí§ "
            fi
            if [ "${QUEUE}" = "middle" ]; then
                QUEUE="üîπ "
            fi
            if [ "${QUEUE}" = "dpool" ]; then
                QUEUE="üîπ "
            fi
            if [ "${QUEUE}" = "low" ]; then
                QUEUE="üîª "
            fi
            if [ "${QUEUE}" = "high" ]; then
                QUEUE="üî∫ "
            fi
            if [ "${QUEUE}" = "gpu" ]; then
                QUEUE="üì∫ "
            fi
            
            printf "%-${id_field}s" $Jobid
            printf "${Blue}%-${title_field}s${NC}" $Jobtitle
            printf "%-${queue_field}s" $QUEUE
            printf "%-${status_field}s" $STATE
            printf "${Red}%-${run_time_field}s${NC}" $RUNNINGTIME
            nodeused=$(qstat -f|awk 'BEGIN {RS = "\n\n+"}'/$Jobid/''|awk 'BEGIN {RS = "    "}/exec_host/'|sed ":a;N;s/\n\t//g;ta"|sed ":a;N;s/\n\n/\n/g;ta"|sed ':a;N;s/\n\t//g;ta'|sed 's/\//\n/g'|sed 's/= /\n/g'|sed 's/+/\n/g'|grep "node"|uniq|sed ":a;N;s/\n/  /g;ta")
            if [[ $nodeused != "" ]]
                then
                    printf "${Purple}"
                    printf "üñ• ${nodeused//node/}"
                    printf "${NC}\n"
                else
                    printf "\n"
            fi
            if [[ $STATE = "R" ]] && [[ $QUEUE  = "gpu" ]] && [[ $user = $(whoami) ]] ; then
                cd $(qstat -f|awk 'BEGIN {RS = "\n\n+";ORS = "\n\n"}'/$Jobid/''|grep "init_work_dir"|awk '{print $3}')
                if [ -f "mdinfo" ]; then
                    grep "emaining" mdinfo|awk -F "|" '{print $2, $3, $4}'
                fi
            fi
        done
    done
}

# define user list
if [[ $ALLFLAG = 0 ]] && [[ $ADDFLAG = 0 ]]; then
    USERLIST=$(printf $(whoami);echo "@")
elif [[ $ALLFLAG = 0 ]]; then
    USERLIST=$(printf "$(printf $(whoami);echo "@")\n";printf "ylzh_${ADDLIST}@\n"|sort -k2n|uniq|grep -v $(printf $(whoami);echo "@"))
else
    USERLIST=$(printf "$(printf $(whoami);echo "@")\n";printf "%s\n" $(qstat -f|grep "Job_Owner"|grep -v $(printf $(whoami);echo "@")|awk -F "[=@ ]" '{print $8}'|sort -k2n|uniq))
fi

# print out
while [ 1 = 1 ]
do
    if [[ $LOOPFLAG = 0 ]]; then
        PRINTOUT $USERLIST
        echo $USERLIST
        exit 0
    else
        tput cup 0 0
        tput ed
        shownodes
        PRINTOUT $USERLIST
        printf "\nüíäüíäüíäCheck Job State every ${Purple}$LOOPTIME${NC} seconds...üíäüíäüíä\n"
        sleep $LOOPTIME;
    fi
done
