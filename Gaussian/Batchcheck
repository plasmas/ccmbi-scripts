#! /bin/sh

# This is a small script designed to batch transform .chk files into .fchk files
# So... Why?
# official "formchk" has the following SYNOPSIS:
#   1. formchk A.chk This will format A.chk into A.fchk
#   2. formchk A.chk B will format A.chk and generate file B
# Ths second usage determined that you CANNOT use wildcards such as "formchk *.chk" to get multiple .fchks

# So I present you THIS:

######################################

# Define text colors
NC='\033[0m'

Red='\033[0;31m'
Green='\033[0;32m'
Blue='\033[0;34m'
Purple='\033[0;35m'
Yellow='\033[1;33m'

Blink='\033[5m'

######################################

# usage function:

usage()
{
    printf "${Red}DESCRIPTION${NC}\n\n"
    printf "  ${Yellow}\'Batchcheck\'${NC} is used to generate multiple fchk files.\n"
    printf "  Type ${Yellow}Batchcheck${NC} [wildcard/filename] to convert .chks\n"
    printf "  Batchcheck alone will execute default route. ${Red}Converting${NC} & ${Red}deleting${NC} ALL .chk\n"
    printf "  Created with ${Red}LOVE${NC} by ${Blue}Yuanqi Wang${NC} ${Purple}@CCMBI${NC}(Dec, 2018). ${Yellow}ABSOLUTELY NO WARRANTY!${NC}\n\n"
}

if_preserve=false

if [ "$1" != "" ]   # if arguments / files are imported.
    then
        while [ "$1" != "" ]
            do
                case $1 in
                    -h | --help )
                        usage
                        exit 0
                        ;;
                    -p | --preserve )
                        if_preserve=true
                        ;;
                    * )
                        if [ -f $1 ]    # if the input file exists.
                            then
                                filename=$(basename -- "$1")
                                extension="${filename##*.}"
                                if [ "$extension" == "chk" ]
                                    then
                                        formchk $1 >/dev/null 2>/dev/null
                                        printf "${Green}Info${NC}: ${Green}$1${NC} converted.\n"
                                        if [ "$if_preserve" = false ]
                                            then
                                                rm -f $1 2> /dev/null
                                                printf "${Yellow}${Blink}Warning${NC}: ${Green}$1${NC} deleted.\n"
                                        fi
                                    else
                                        printf "${Yellow}${Blink}Error${NC}: ${Green}$1${NC} seems not a .chk file? IGNORED.\n"
                                fi
                            else
                                printf "${Red}${Blink}Error:${NC} Unknown argument or file not exist.\n"
                        fi
                esac
                shift
            done
    else
        printf "${Yellow}${Blink}Warning${NC}: Executing default route. ${Red}Converting${NC} & ${Red}deleting${NC} ALL .chk\n"
        Batchcheck *.chk
fi

exit 0